<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">


  <!-- Lets connect the Camel ActiveMQ component to the embedded broker.
       See http://camel.apache.org/activemq.html for more information.
  -->
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="brokerURL" value="failover:tcp://localhost:61616"/>
  </bean>

  <!-- Here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag), and
         sends them on a JMS queue. This queue is watched by
         another route which then performs content based
         routing on the messages using XPath. 
  -->
  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="activemq:in"/>
	      <setHeader headerName="messageType">
	    	<simple>${body}</simple>
		   </setHeader>
	      <log id="_logFile" message="Routing message with body: ${body} and header: ${header.messageType}"/>
	      
      <toD uri="activemq:${header.messageType}"/>
    </route>
   <route>
      <from uri="activemq:message1"/>
      <to uri="activemq:out.message1"/>
    </route>
     <route>
      <from uri="activemq:message2"/>
      <to uri="activemq:out.message2"/>
    </route>
  </camelContext>

</beans>
